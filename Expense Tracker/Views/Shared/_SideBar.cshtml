@*
    Sidebar for Expense Tracker
*@

@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    var username = ViewContext.HttpContext.Request.Query["username"].ToString();
    // Get the current user's first name
    var currentUser = await UserManager.GetUserAsync(User);
    var userFirstName = currentUser?.FirstName ?? "Guest";

    // Define menu items
    var menuItems = new List<object>
    {
        new { text = "General", separator = true },
        new { text = "Dashboard", url = $"/Dashboard/Index?username={username}", iconCss = "fa-solid fa-box" },
        new { text = "Categories", url = $"/Category/Index?username={username}", iconCss = "fa-solid fa-folder-closed" },
        new { text = "Transactions", url = $"/Transaction/Index?username={username}", iconCss = "fa-solid fa-arrow-right-arrow-left" },
        new { text = "Extras", separator = true },
        new { text = "Reports", iconCss = "fa-solid fa-chart-simple", url = "javascript:confirmAndSendReportEmail();" },
    };
}

<ejs-sidebar id="sidebar" width="290px" enableDock dockSize="100px" target=".dock-target" enableGestures="false">
    <e-content-template>
        <div class="logo-wrapper">
            <div class="app-logo">
                <img src="~/logo.png" />
            </div>
            <div class="w-100"></div>
            <i id="sidebar-toggler" class="fa-solid"></i>
        </div>

        <div class="profile-wrapper">
            <img class="profile-pic" src="~/DefaultPhoto.jpeg" />
            <div class="titles d-flex flex-column ps-3">
                <h6 class="mb-0">Wallet App</h6>
                @if (User.Identity != null && User.Identity.IsAuthenticated)
                {
                    <span class="text-muted" id="UserNameSideBar">@userFirstName</span>
                }
                else
                {
                    <span class="text-muted">Guest</span>
                }
            </div>
        </div>

        <ejs-menu id="menu"
                  items="menuItems"
                  orientation="Vertical"
                  hamburgerMode></ejs-menu>

        <!-- ADD THIS LOGOUT FORM -->
        <div class="mt-auto p-3" style="margin-top:28vh !important;">
            <form asp-controller="Account" asp-action="Logout" method="post">
                <button type="submit" class="btn btn-danger w-100">
                    <i class="fa-solid fa-right-from-bracket"></i> Logout
                </button>
            </form>
        </div>

    </e-content-template>
</ejs-sidebar>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Sidebar toggle
        var dockBar = document.getElementById('sidebar').ej2_instances[0];
        document.getElementById('sidebar-toggler').onclick = function () {
            dockBar.toggle();
        };
    });

    function testing(){
        alert("Called test function");
    }

    function confirmAndSendReportEmail() {
        // Get the current user's first name from the sidebar text for the confirmation message
        const userFirstName = document.getElementById('UserNameSideBar').textContent;

        // Show a confirmation dialog
        if (confirm(`Are you sure you want to send the report to ${userFirstName}?`)) {
            // User clicked "OK"
            sendReportRequest();
        }
    }

    function sendReportRequest() {
        // Get the anti-forgery token from the hidden input we added to the layout
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        // Show some feedback to the user
        alert("Sending report... This may take a moment.");

        // Use the Fetch API to make a secure POST request to our controller action
        fetch('/Dashboard/SendReportEmail', {
            method: 'POST',
            headers: {
                'RequestVerificationToken': token // Send the token in the headers
            }
        })
        .then(response => response.json())
        .then(data => {
            // Show the result from the server in an alert
            alert(data.message);
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An unexpected error occurred. Please try again.');
        });
    }
</script>